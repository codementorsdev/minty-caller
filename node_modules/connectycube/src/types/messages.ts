import { DateOrTimestamp } from './common';

export namespace ConnectyCubeMessages {
  export type Attachment = { type: string; id: string; url?: string; [key: string]: any };
  export type Reactions = { own: string[]; total: { [emoji: string]: number } };
  export type Message = {
    _id: string;
    created_at: DateOrTimestamp;
    updated_at: DateOrTimestamp;
    chat_dialog_id: string;
    message: string;
    date_sent: DateOrTimestamp;
    sender_id: number;
    recipient_id: number;
    read_ids: number[];
    delivered_ids: number[];
    views_count: number;
    attachments: Attachment[];
    reactions: Reactions;
    read: number;
    [key: string]: any;
  };
  // Request parameters type
  export type ListParams = {
    chat_dialog_id?: string;
    sort_asc?: 'date_sent' | string;
    sort_desc?: 'date_sent' | string;
    limit?: number;
    skip?: number;
    mark_as_read?: number | string;
    preview?: number | string;
    [field_name: string]: any;
  };
  export type CreateParams = {
    chat_dialog_id?: string;
    recipient_id?: string | number;
    message?: string;
    attachments?: Attachment[];
    [key: string]: any;
  };
  export type UpdateParams = {
    chat_dialog_id?: string;
    read?: number | string;
    delivered?: number | string;
    message?: string;
  };
  export type CreateSystemParams = { recipientId: number; [key: string]: any };
  export type UnreadCountParams = { chat_dialog_ids?: string | string[] };
  export type PutReactionParams = { add?: string; remove?: string };
  // Response data types
  export type ListResponse = { skip: number; limit: number; items: Message[] };
  export type DeleteResponse = {
    SuccessfullyDeleted: { ids: string[] };
    NotFound: { ids: string[] };
    WrongPermissions: { ids: string[] };
  };
  export type CreateSystemResponse = {
    messageId: string;
    recipientId: number;
    extensionParams?: { [key: string]: any };
  };
  export type UnreadCountResponse = { total: number; [chat_dialog_id: string]: number };
  export type ListReactionsResponse = { [emoji: string]: number[] };
}

import { DateOrTimestamp, EmptyParams } from './common';
import { ConnectyCubeUsers } from './users';

export namespace ConnectyCubeAuth {
  export type Session = {
    id: number;
    user_id: number;
    application_id: number;
    token: string;
    ts: DateOrTimestamp;
    created_at: DateOrTimestamp;
    updated_at: DateOrTimestamp;
    user?: ConnectyCubeUsers.User | null;
  };
  export type LoginByLogin = { login: string; password: string };
  export type LoginByEmail = { email: string; password: string };
  export type LoginByGuest = { guest: '1'; full_name: string };
  export type LoginByFacebook = { provider: 'facebook'; keys: { token: string; secret: string } };
  export type LoginByTwitter = { provider: 'twitter'; keys: { token: string; secret: string } };
  export type LoginByFirebasePhone = {
    provider: 'firebase_phone';
    firebase_phone: { project_id: string | number; access_token: string };
  };
  export type LoginByFirebaseEmail = {
    provider: 'firebase_email';
    firebase_email: { project_id: string | number; access_token: string };
  };
  // Request parameters type
  export type LoginParams =
    | LoginByLogin
    | LoginByEmail
    | LoginByGuest
    | LoginByFacebook
    | LoginByTwitter
    | LoginByFirebasePhone
    | LoginByFirebaseEmail;
  export type GeneratedSessionParams = (LoginParams | EmptyParams) & { application_id: string; auth_key: string };
  // Response data type
  export type LoginRawResponse = { user: ConnectyCubeUsers.User; [key: string]: any };
  export type GetSessionRawResponse = { session: Session; [key: string]: any };
}

import { DateOrTimestamp } from './common';
import { ConnectyCubeProxy } from './proxy';

export namespace ConnectyCubeStorage {
  export type BlobObjectAccess = {
    id?: number;
    blob_id?: number;
    expires?: DateOrTimestamp;
    object_access_type?: string;
    params?: string;
    download_url?: string;
  };
  export type Blob = {
    id: number;
    uid?: string;
    content_type?: string;
    name?: string;
    size?: number | null;
    created_at?: DateOrTimestamp;
    updated_at?: DateOrTimestamp;
    public?: boolean;
    blob_status?: string | null;
    set_completed_at?: DateOrTimestamp;
    blob_object_access?: BlobObjectAccess;
    account_id?: number;
    app_id?: number;
    [key: string]: any;
  };
  // Request parameters type
  export type ListParams = {
    current_page?: number;
    per_page?: number;
  };
  export type CreateParams = {
    content_type: string;
    name: string;
    public: boolean;
  };
  export type CreateAndUploadParams = {
    name: string;
    file: File | Buffer;
    type: string;
    size: number;
    public?: boolean;
    abort_id?: string | number;
  };
  export type UploadParams = ConnectyCubeProxy.Params;
  export type MarkUploadedParams = {
    id: number;
    size: number | string;
  };
  export type GetFileObjectParams = {
    download_url?: string;
  };
  export type UpdateParams = {
    id: number;
    name: string;
  };
  // Response data types
  export type ListResponse = {
    current_page: number;
    per_page: number;
    total_entries: number;
    items: Blob[];
  };
  export type BlobResponse = { blob: Blob };
}

import ProxyService from './Proxy';
import { Auth, Users } from './types';
import { EmptyParams, EmptyResponse } from './types/common';
export default class AuthService {
    proxy: ProxyService;
    readonly routes: {
        session: string;
        login: string;
    };
    constructor(proxy: ProxyService);
    setSession: (session: Auth.Session) => void;
    getSession: () => Promise<Auth.Session>;
    createSession: (params?: Auth.LoginParams | EmptyParams) => Promise<Auth.Session>;
    destroySession: () => Promise<EmptyResponse>;
    login: (params: Auth.LoginParams) => Promise<Users.User>;
    logout: () => Promise<EmptyResponse>;
    private generateCreateSessionParams;
}
//# sourceMappingURL=Auth.d.ts.map
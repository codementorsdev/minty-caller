import { DateOrTimestamp } from './common';
export declare enum NotificationChannel {
    APNS = "apns",
    VOIP = "apns_voip",
    GCM = "gcm"
}
export declare enum DevicePlatform {
    IOS = "ios",
    ANDROID = "android"
}
export declare enum PushEnvironment {
    DEV = "development",
    PROD = "production"
}
export declare namespace ConnectyCubePushNotifications {
    type Subscription = {
        subscription: {
            id: number | string;
            notification_channel: {
                name: NotificationChannel | string;
            };
            device: {
                udid: string;
                platform: {
                    name: DevicePlatform | string;
                };
            };
        };
    };
    type Event = {
        event: {
            id: number;
            event_type: string | null;
            message: string | null;
            date: DateOrTimestamp;
            period: DateOrTimestamp;
            name: string | null;
            occured_count?: number;
            created_at?: DateOrTimestamp;
            updated_at?: DateOrTimestamp;
            end_date?: DateOrTimestamp;
            active?: boolean | null;
            application_id: number | null;
            user_id: number | null;
            kind: string | null;
            environment: PushEnvironment | null;
            tag_query?: any;
            notification_channel?: {
                name?: NotificationChannel | null;
            };
        };
    };
    type SubscriptionsCreateParams = {
        notification_channel: NotificationChannel | string;
        push_token: {
            environment: PushEnvironment | string;
            client_identification_sequence: string;
            bundle_identifier?: string;
        };
        device: {
            platform: DevicePlatform | string;
            udid: string;
        };
    };
    type EventsCreateParams = {
        notification_type: 'push' | string;
        push_type: NotificationChannel | string;
        environment: PushEnvironment | string;
        event_type?: 'one_shot' | string;
        message?: string | null;
        user?: {
            ids: string;
            tags?: {
                any?: string;
                all?: string;
                exclude?: string;
            };
        };
        external_user?: {
            ids: string;
        };
    };
}
//# sourceMappingURL=pushnotifications.d.ts.map